name: SA2B-{player}

# Used to describe your yaml. Useful if you have multiple files.
description: Sonic Adventure 2 Battle - Random

game: Sonic Adventure 2 Battle
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Sonic Adventure 2 Battle:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  gate_boss_plando:
    # Possible Locations:
    # "Gate 1 Boss"
    # "Gate 2 Boss"
    # "Gate 3 Boss"
    # "Gate 4 Boss"
    # "Gate 5 Boss"
    # 
    # Possible Bosses:
    # "Sonic vs Shadow 1"
    # "Sonic vs Shadow 2"
    # "Tails vs Eggman 1"
    # "Tails vs Eggman 2"
    # "Knuckles vs Rouge 1"
    # "BIG FOOT"
    # "HOT SHOT"
    # "FLYING DOG"
    # "Egg Golem (Sonic)"
    # "Egg Golem (Eggman)"
    # "King Boom Boo"
    plando: 50

  ring_link:
    # Whether your in-level ring gain/loss is linked to other players
    'false': 50
    'true': 0

  trap_link:
    # Whether your received traps are linked to other players
    # 
    # You will also receive any linked traps from other players with Trap Link enabled,
    # if you have a weight above "none" set for that trap
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  # General Options
  goal:
    # Determines the goal of the seed
    # 
    # Biolizard: Finish Cannon's Core and defeat the Biolizard and Finalhazard
    # 
    # Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone
    # 
    # Finalhazard Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone, then defeat Finalhazard
    # 
    # Grand Prix: Win every race in Kart Race Mode (all standard levels are disabled)
    # 
    # Boss Rush: Beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Cannon's Core Boss Rush: Beat Cannon's Core, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Boss Rush Chaos Emerald Hunt: Find the Seven Chaos Emeralds, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # 
    # Chaos Chao: Raise a Chaos Chao to win
    # 
    # Minigame Madness: Win a certain amount of each Minigame Trap, then defeat Finalhazard
    biolizard: 8
    chaos_emerald_hunt: 4
    finalhazard_chaos_emerald_hunt: 2
    grand_prix: 1
    boss_rush: 1
    cannons_core_boss_rush: 0
    boss_rush_chaos_emerald_hunt: 1
    chaos_chao: 0
    minigame_madness: 0

  boss_rush_shuffle:
    # Determines how bosses in Boss Rush Mode are shuffled
    # 
    # Vanilla: Bosses appear in the Vanilla ordering
    # 
    # Shuffled: The same bosses appear, but in a random order
    # 
    # Chaos: Each boss is randomly chosen separately (one will always be King Boom Boo)
    # 
    # Singularity: One boss is chosen and placed in every slot (one will always be replaced with King Boom Boo)
    vanilla: 50
    shuffled: 0
    chaos: 0
    singularity: 0

  minigame_madness_requirement:
    # Determines how many of each Minigame Trap must be won (for Minigame Madness goal)
    # 
    # Receiving this many of a Minigame Trap will allow you to replay that minigame at-will in the Chao World lobby
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  minigame_madness_minimum:
    # Determines the minimum number of each Minigame Trap that are created (for Minigame Madness goal)
    # 
    # At least this many of each trap will be created as "Progression Traps", regardless of other trap option selections
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  logic_difficulty:
    # What set of Upgrade Requirement logic to use
    # 
    # Standard: The logic assumes the "intended" usage of Upgrades to progress through levels
    # 
    # Hard: Some simple skips or sequence breaks may be required, but no out-of-bounds
    # 
    # Expert: If it is humanly possible, it may be required
    standard: 50
    hard: 0
    expert: 0

  required_rank:
    # Determines what minimum Rank is required to send a check for a mission
    e: 16
    d: 4
    c: 1
    b: 0
    a: 0

  max_emblem_cap:
    # Determines the maximum number of emblems that can be in the item pool.
    # 
    # If fewer available locations exist in the pool than this number, the number of available locations will be used instead.
    # 
    # Gate and Cannon's Core costs will be calculated based off of that number.
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 180
    # Minimum value is 50
    # Maximum value is 1000
    180: 0
    random: 1
    random-low: 0
    random-high: 0

  ring_loss:
    # How taking damage is handled
    # 
    # Classic: You lose all of your rings when hit
    # 
    # Modern: You lose 20 rings when hit
    # 
    # OHKO: You die immediately when hit (NOTE: Some Hard or Expert Logic tricks may require damage boosts!)
    classic: 2
    modern: 1
    ohko: 0

  # Stages
  mission_shuffle:
    # Determines whether missions order will be shuffled per level
    'false': 2
    'true': 1

  emblem_percentage_for_cannons_core:
    # Allows logic to gate the final mission behind a number of Emblems
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 75
    50: 0
    random: 1
    random-low: 0
    random-high: 0

  required_cannons_core_missions:
    # Determines how many Cannon's Core missions must be completed (for Biolizard or Cannon's Core goals)
    # 
    # First: Only the first mission must be completed
    # 
    # All Active: All active Cannon's Core missions must be completed
    first: 4
    all_active: 1

  number_of_level_gates:
    # The number emblem-locked gates which lock sets of levels
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    0: 1
    1: 4
    2: 8
    3: 16
    4: 8
    5: 4
    random: 0
    random-low: 0
    random-high: 0

  level_gate_costs:
    # Determines how many emblems are required to unlock level gates
    low: 4
    medium: 2
    high: 1

  level_gate_distribution:
    # Determines how levels are distributed between level gate regions
    # 
    # Early: Earlier regions will have more levels than later regions
    # 
    # Even: Levels will be evenly distributed between all regions
    # 
    # Late: Later regions will have more levels than earlier regions
    early: 2
    even: 4
    late: 1

  # Sanity Options
  keysanity:
    # Determines whether picking up Chao Keys grants checks
    # (86 Locations)
    'false': 1
    'true': 2

  whistlesanity:
    # Determines whether whistling at various spots grants checks
    # 
    # None: No Whistle Spots grant checks
    # 
    # Pipes: Whistling at Pipes grants checks (97 Locations)
    # 
    # Hidden: Whistling at Hidden Whistle Spots grants checks (32 Locations)
    # 
    # Both: Whistling at both Pipes and Hidden Whistle Spots grants checks (129 Locations)
    none: 16
    pipes: 4
    hidden: 4
    both: 1

  beetlesanity:
    # Determines whether destroying Gold Beetles grants checks
    # (27 Locations)
    'false': 2
    'true': 1

  omosanity:
    # Determines whether activating Omochao grants checks
    # (192 Locations)
    'false': 8
    'true': 1

  animalsanity:
    # Determines whether unique counts of animals grant checks.
    # (422 Locations)
    # 
    # ALL animals must be collected in a single run of a mission to get all checks.
    'false': 16
    'true': 1

  itemboxsanity:
    # Determines whether collecting Item Boxes grants checks
    # None: No Item Boxes grant checks
    # Extra Lives: Extra Life Boxes grant checks (94 Locations)
    # All: All Item Boxes grant checks (502 Locations Total)
    none: 8
    extra_lives: 1
    all: 0

  bigsanity:
    # Determines whether helping Big fish grants checks.
    # (32 Locations)
    'false': 8
    'true': 1

  kart_race_checks:
    # Determines whether Kart Race Mode grants checks
    # 
    # None: No Kart Races grant checks
    # 
    # Mini: Each Kart Race difficulty must be beaten only once
    # 
    # Full: Every Character must separately beat each Kart Race difficulty
    none: 8
    mini: 4
    full: 1

  # Chao
  black_market_slots:
    # Determines how many multiworld items are available to purchase from the Black Market
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 0
    # Minimum value is 0
    # Maximum value is 64
    0: 16
    random-range-1-8: 8
    random-range-9-16: 4
    random-range-17-32: 2
    random-range-33-64: 1

  black_market_unlock_costs:
    # Determines how many Chao Coins are required to unlock sets of Black Market items
    low: 2
    medium: 4
    high: 1

  black_market_price_multiplier:
    # Determines how many rings the Black Market items cost
    # 
    # The base ring costs of items in the Black Market range from 50-100, and are then multiplied by this value
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 1
    # Minimum value is 0
    # Maximum value is 40
    0: 1
    1: 16
    random-range-2-4: 8
    random-range-5-8: 4
    random-range-9-16: 2
    random-range-17-40: 1

  chao_race_difficulty:
    # Determines the number of Chao Race difficulty levels included. Easier difficulty settings means fewer Chao Race checks
    # 
    # None: No Chao Races have checks
    # 
    # Beginner: Beginner Races
    # 
    # Intermediate: Beginner, Challenge, Hero, and Dark Races
    # 
    # Expert: Beginner, Challenge, Hero, Dark and Jewel Races
    none: 32
    beginner: 16
    intermediate: 4
    expert: 1

  chao_karate_difficulty:
    # Determines the number of Chao Karate difficulty levels included. (Note: This setting requires purchase of the "Battle" DLC)
    none: 128
    beginner: 64
    standard: 16
    expert: 4
    super: 1

  chao_stadium_checks:
    # Determines which Chao Stadium activities grant checks
    # 
    # All: Each individual race and karate fight grants a check
    # 
    # Prize: Only the races which grant Chao Toys grant checks (final race of each Beginner and Jewel cup, 4th, 8th, and 12th Challenge Races, 2nd and 4th Hero and Dark Races, final fight of each Karate difficulty)
    all: 16
    prize: 1

  chao_animal_parts:
    # Determines whether giving Chao various animal parts grants checks
    # (73 Locations)
    'false': 16
    'true': 1

  chao_stats:
    # Determines the highest level in each Chao Stat that grants checks
    # (Swim, Fly, Run, Power)
    #
    # You can define additional values between the minimum and maximum values.
    # Default is ?
    # Minimum value is 0
    # Maximum value is 99
    0: 1
    random-range-1-20: 8
    random-range-21-40: 4
    random-range-41-60: 2
    random-range-61-99: 1

  chao_stats_frequency:
    # Determines how many levels in each Chao Stat grant checks (up to the maximum set in the `chao_stats` option)
    # 
    # `1` means every level is included, `2` means every other level is included, `3` means every third, and so on
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 5
    # Minimum value is 1
    # Maximum value is 20
    random-range-1-3: 2
    random-range-4-6: 4
    random-range-7-10: 2
    random-range-11-20: 1

  chao_stats_stamina:
    # Determines whether Stamina is included in the `chao_stats` option
    'false': 50
    'true': 0

  chao_stats_hidden:
    # Determines whether the hidden stats (Luck and Intelligence) are included in the `chao_stats` option
    'false': 50
    'true': 0

  chao_kindergarten:
    # Determines whether learning the lessons from the Kindergarten Classroom grants checks
    # (WARNING: VERY SLOW)
    # 
    # None: No Kindergarten classes have checks
    # 
    # Basics: One class from each category (Drawing, Dance, Song, and Instrument) is a check (4 Locations)
    # 
    # Full: Every class is a check (23 Locations)
    none: 50
    basics: 0
    full: 0

  shuffle_starting_chao_eggs:
    # Determines whether the starting Chao eggs in the gardens are random
    'false': 0
    'true': 50

  chao_entrance_randomization:
    # Determines whether entrances in Chao World are randomized
    'false': 50
    'true': 0

  # Junk and Traps
  junk_fill_percentage:
    # Replace a percentage of non-required emblems in the item pool with random junk items
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 50
    # Minimum value is 0
    # Maximum value is 100
    0: 1
    random-range-1-25: 2
    random-range-26-75: 4
    random-range-76-100: 1

  trap_fill_percentage:
    # Replace a percentage of junk items in the item pool with random traps
    #
    # You can define additional values between the minimum and maximum values.
    # Default is 0
    # Minimum value is 0
    # Maximum value is 100
    0: 16
    random-range-1-25: 8
    random-range-26-75: 4
    random-range-76-100: 1

  omochao_trap_weight:
    # Likelihood of receiving a trap which spawns several Omochao around the player
    none: 0
    low: 0
    medium: 50
    high: 0

  timestop_trap_weight:
    # Likelihood of receiving a trap which briefly stops time
    none: 0
    low: 0
    medium: 50
    high: 0

  confusion_trap_weight:
    # Likelihood of receiving a trap which causes the controls to be skewed for a period of time
    none: 0
    low: 0
    medium: 50
    high: 0

  tiny_trap_weight:
    # Likelihood of receiving a trap which causes the player to become tiny
    none: 0
    low: 0
    medium: 50
    high: 0

  gravity_trap_weight:
    # Likelihood of receiving a trap which increases gravity
    none: 0
    low: 0
    medium: 50
    high: 0

  exposition_trap_weight:
    # Likelihood of receiving a trap which tells you the story
    none: 0
    low: 0
    medium: 50
    high: 0

  ice_trap_weight:
    # Likelihood of receiving a trap which makes the world slippery
    none: 0
    low: 0
    medium: 50
    high: 0

  slow_trap_weight:
    # Likelihood of receiving a trap which makes you gotta go slow
    none: 0
    low: 0
    medium: 50
    high: 0

  cutscene_trap_weight:
    # Likelihood of receiving a trap which makes you watch an unskippable cutscene
    none: 0
    low: 0
    medium: 50
    high: 0

  reverse_trap_weight:
    # Likelihood of receiving a trap which reverses your controls
    none: 0
    low: 0
    medium: 50
    high: 0

  literature_trap_weight:
    # Likelihood of receiving a trap which forces you to read
    none: 0
    low: 0
    medium: 50
    high: 0

  controller_drift_trap_weight:
    # Likelihood of receiving a trap which causes your control sticks to drift
    none: 0
    low: 0
    medium: 50
    high: 0

  poison_trap_weight:
    # Likelihood of receiving a trap which causes you to lose rings over time
    none: 0
    low: 0
    medium: 50
    high: 0

  bee_trap_weight:
    # Likelihood of receiving a trap which spawns a swarm of bees
    none: 0
    low: 0
    medium: 50
    high: 0

  # Minigames
  pong_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pong minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  breakout_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Breakout minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  fishing_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Fishing minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  trivia_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Trivia minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pokemon_trivia_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pokemon Trivia minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pokemon_count_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pokemon Count minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  number_sequence_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Number Sequence minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  light_up_path_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Light Up Path minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  pinball_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pinball minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  math_quiz_trap_weight:
    # Likelihood of receiving a trap which forces you to solve a math problem
    none: 0
    low: 0
    medium: 50
    high: 0

  snake_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Snake minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  input_sequence_trap_weight:
    # Likelihood of receiving a trap which forces you to press a sequence of inputs
    none: 0
    low: 0
    medium: 50
    high: 0

  minigame_trap_difficulty:
    # How difficult any Minigame-style traps are
    # Chaos causes the difficulty to be random per-minigame
    easy: 0
    medium: 50
    hard: 0
    chaos: 0

  big_fishing_difficulty:
    # How difficult Big's Fishing Minigames are
    # Chaos causes the difficulty to be random per-minigame
    easy: 0
    medium: 50
    hard: 0
    chaos: 0

  # Sonic Missions
  sonic_mission_count:
    # The number of active missions to include for Sonic stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  sonic_mission_2:
    # Determines if the Sonic 100 rings missions should be included
    'false': 1
    'true': 2

  sonic_mission_3:
    # Determines if the Sonic lost chao missions should be included
    'false': 4
    'true': 1

  sonic_mission_4:
    # Determines if the Sonic time trial missions should be included
    'false': 1
    'true': 2

  sonic_mission_5:
    # Determines if the Sonic hard missions should be included
    'false': 2
    'true': 1

  # Shadow Missions
  shadow_mission_count:
    # The number of active missions to include for Shadow stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  shadow_mission_2:
    # Determines if the Shadow 100 rings missions should be included
    'false': 1
    'true': 2

  shadow_mission_3:
    # Determines if the Shadow lost chao missions should be included
    'false': 4
    'true': 1

  shadow_mission_4:
    # Determines if the Shadow time trial missions should be included
    'false': 1
    'true': 2

  shadow_mission_5:
    # Determines if the Shadow hard missions should be included
    'false': 2
    'true': 1

  # Tails Missions
  tails_mission_count:
    # The number of active missions to include for Tails stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  tails_mission_2:
    # Determines if the Tails 100 rings missions should be included
    'false': 1
    'true': 2

  tails_mission_3:
    # Determines if the Tails lost chao missions should be included
    'false': 4
    'true': 1

  tails_mission_4:
    # Determines if the Tails time trial missions should be included
    'false': 1
    'true': 2

  tails_mission_5:
    # Determines if the Tails hard missions should be included
    'false': 2
    'true': 1

  # Eggman Missions
  eggman_mission_count:
    # The number of active missions to include for Eggman stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  eggman_mission_2:
    # Determines if the Eggman 100 rings missions should be included
    'false': 1
    'true': 2

  eggman_mission_3:
    # Determines if the Eggman lost chao missions should be included
    'false': 4
    'true': 1

  eggman_mission_4:
    # Determines if the Eggman time trial missions should be included
    'false': 1
    'true': 2

  eggman_mission_5:
    # Determines if the Eggman hard missions should be included
    'false': 2
    'true': 2

  # Knuckles Missions
  knuckles_mission_count:
    # The number of active missions to include for Knuckles stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  knuckles_mission_2:
    # Determines if the Knuckles 100 rings missions should be included
    'false': 1
    'true': 2

  knuckles_mission_3:
    # Determines if the Knuckles lost chao missions should be included
    'false': 4
    'true': 1

  knuckles_mission_4:
    # Determines if the Knuckles time trial missions should be included
    'false': 1
    'true': 2

  knuckles_mission_5:
    # Determines if the Knuckles hard missions should be included
    'false': 2
    'true': 1

  # Rouge Missions
  rouge_mission_count:
    # The number of active missions to include for Rouge stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  rouge_mission_2:
    # Determines if the Rouge 100 rings missions should be included
    'false': 1
    'true': 2

  rouge_mission_3:
    # Determines if the Rouge lost chao missions should be included
    'false': 4
    'true': 1

  rouge_mission_4:
    # Determines if the Rouge time trial missions should be included
    'false': 1
    'true': 2

  rouge_mission_5:
    # Determines if the Rouge hard missions should be included
    'false': 2
    'true': 1

  # Kart Missions
  kart_mission_count:
    # The number of active missions to include for Route 101 and 280
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  kart_mission_2:
    # Determines if the Route 101 and 280 100 rings missions should be included
    'false': 1
    'true': 2

  kart_mission_3:
    # Determines if the Route 101 and 280 avoid cars missions should be included
    'false': 4
    'true': 1

  kart_mission_4:
    # Determines if the Route 101 and 280 avoid walls missions should be included
    'false': 4
    'true': 1

  kart_mission_5:
    # Determines if the Route 101 and 280 hard missions should be included
    'false': 1
    'true': 2

  # Cannon's Core Missions
  cannons_core_mission_count:
    # The number of active missions to include for Cannon's Core
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    1: 2
    2: 8 #default
    3: 4
    4: 2
    5: 1

  cannons_core_mission_2:
    # Determines if the Cannon's Core 100 rings mission should be included
    'false': 1
    'true': 2

  cannons_core_mission_3:
    # Determines if the Cannon's Core lost chao mission should be included
    'false': 4
    'true': 1

  cannons_core_mission_4:
    # Determines if the Cannon's Core time trial mission should be included
    'false': 1
    'true': 2

  cannons_core_mission_5:
    # Determines if the Cannon's Core hard mission should be included
    'false': 2
    'true': 1

  # Aesthetics
  sadx_music:
    # Whether the randomizer will include Sonic Adventure DX Music in the music pool
    # 
    # SA2B: Only SA2B music will be played
    # 
    # SADX: Only SADX music will be played
    # 
    # Both: Both SA2B and SADX music will be played
    # 
    # NOTE: This option requires the player to own a PC copy of SADX and to follow the addition steps in the setup guide.
    sa2b: 50
    sadx: 0
    both: 0

  music_shuffle:
    # What type of Music Shuffle is used
    # 
    # None: No music is shuffled.
    # 
    # Levels: Level music is shuffled.
    # 
    # Full: Level, Menu, and Additional music is shuffled.
    # 
    # Singularity: Level, Menu, and Additional music is all replaced with a single random song.
    none: 50
    levels: 0
    full: 0
    singularity: 0

  voice_shuffle:
    # What type of Voice Shuffle is used
    # 
    # None: No voices are shuffled.
    # 
    # Shuffled: Voices are shuffled.
    # 
    # Rude: Voices are shuffled, but some are replaced with rude words.
    # 
    # Chao: All voices are replaced with chao sounds.
    # 
    # Singularity: All voices are replaced with a single random voice.
    none: 50
    shuffled: 0
    rude: 0
    chao: 0
    singularity: 0

  narrator:
    # Which menu narrator is used
    default: 1
    shadow: 1
    rouge: 1
    eggman: 1
    maria: 1
    secretary: 1
    omochao: 1
    amy: 1
    tails: 1
    knuckles: 1
    sonic: 1

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

triggers:
# if we need C rank, force disable hard mode missions
- option_category: Sonic Adventure 2 Battle
  option_name: required_rank
  option_result: c
  options:
    Sonic Adventure 2 Battle:
      sonic_mission_5: false
      shadow_mission_5: false
      tails_mission_5: false
      eggman_mission_5: false
      knuckles_mission_5: false
      rouge_mission_5: false